:root {
  --clr-primary: rgb(83, 173, 105);
  --clr-light: #f4f4f4;
  --clr-dark: #333;
  --clr-warning: rgb(177, 44, 44);
}

*,
*::before,
*::after {
  font-family: inherit;
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: "Work Sans", sans-serif;
  font-weight: 300;
  font-size: 1.5rem;
  background-color: var(--clr-primary);
  color: var(--clr-light);
  // Using grid to align components
  display: grid;
  grid:
    "header header header header" auto
    "...... lists activated ......" auto
    "footer footer footer footer" auto /
    1fr minmax(100px, 300px) minmax(250px, 500px) 1fr;
}

// Top center title
.title {
  grid-area: header;
  text-align: center;
  font-size: calc(7vw + 2rem);
  font-weight: 900;
  letter-spacing: 1px;
  color: rgba($color: #000000, $alpha: 0.1);
  margin: 1rem 0.5rem 2rem 0.5rem;
}
//

// Common styling
form {
  display: flex;
}
.btn {
  cursor: pointer;
  background: 0;
  border: 0;
  padding: 0;
  color: inherit;
}
.btn.create {
  font-size: 1.5rem;
  font-weight: 900;
  margin-right: 0.5rem;
  transition: opacity 100ms ease-in;
  &:hover {
    opacity: 0.7;
  }
}
.new {
  background: 0;
  border: 0;
  color: inherit;
  // Change color of bottom line acrroding to text color
  border-bottom: 1px solid currentColor;
  font-size: inherit;
  order: 2; // reverse the input and button order
  &::placeholder {
    opacity: 0.3;
  }
  outline: none;
  transition: border-bottom 100ms ease-in;
  &:focus {
    border-bottom-width: 2.5px;
    &::placeholder {
      opacity: 0.1;
    }
  }
}
.new.list {
  font-size: 1.1rem;
}
//

// Left portion styling
.all-tasks {
  grid-area: lists;
}
.task-list {
  font-size: 1.2rem;
  line-height: 1.7;
  list-style: circle;
  padding-left: 1.1rem;
}
.active-list {
  font-weight: 700;
  letter-spacing: 1px;
}
.list-name {
  cursor: pointer;
  &:hover {
    opacity: 0.7;
  }
}
//

// Right portion styling
.todo-list {
  --spacer: 2rem; //locally scoped custom properties

  grid-area: activated;
  background: var(--clr-light);
  color: var(--clr-dark);
  border-radius: 1rem;
  box-shadow: 2px 2px 2px 2px rgba($color: #000000, $alpha: 0.3);
}
.todo-header {
  padding: var(--spacer);
  background: #e4e4e4;
  border-top-left-radius: 1rem;
  border-top-right-radius: 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.todo-title {
  margin: 0 2rem 0 0;
}
.task-count {
  margin: 0;
  font-size: 1rem;
}
.todo-body {
  padding: var(--spacer);
  position: relative;
}
// anything that's type equal to checkbox disappear
[type="checkbox"] {
  opacity: 0;
  position: absolute;
}
.task {
  display: flex;
  align-items: center;
  position: relative;
  margin-bottom: 2rem;
  // create lines between tasks
  &::after {
    content: "";
    position: absolute;
    right: 0;
    left: 0;
    bottom: -0.5rem;
    height: 1px;
    background-color: currentColor;
    opacity: 0.2;
  }
}
.task label {
  display: inline-flex;
  align-items: center;
  position: relative;
  // create lines crossout tasks
  &::after {
    content: "";
    position: absolute;
    left: 1.5rem;
    right: 0;
    top: calc(50% - 1px);
    height: 2px;
    background: currentColor;
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 200ms ease-in-out;
  }
}
.btn.delete-task {
  position: absolute;
  right: 0;
  padding: 0.5rem 0.6rem;
  border-radius: 50%;
  background: var(--clr-warning);
  text-align: center;
  opacity: 0.5;
  transform: scale(0.8);
  transition: all 100ms ease-in-out;
  &:hover {
    opacity: 1;
    transform: scale(1);
  }
  i {
    pointer-events: none;
    color: var(--clr-light);
  }
}
.custom-checkbox {
  --size: 0.75rem;
  display: inline-block; // so that can actually see it
  width: var(--size);
  height: var(--size);
  margin-right: var(--size);
  cursor: pointer;
  border: 2px solid currentColor;
  border-radius: 50%;
  transform: scale(1);
  transition: transform 200ms ease-in-out;
}
.task:hover .custom-checkbox,
[type="checkbox"]:focus + label .custom-checkbox {
  // the + sign means the label next to the checkbox
  transform: scale(1.5);
  color: var(--clr-primary);
}
[type="checkbox"]:checked + label .custom-checkbox {
  transform: scale(1.5);
  background: var(--clr-primary);
  border-color: var(--clr-primary);
  box-shadow: inset 0 0 0px 1.5px white;
}
[type="checkbox"]:checked + label {
  opacity: 0.5;
}
[type="checkbox"]:checked + label::after {
  transform: scaleX(1);
}
.new.task {
  margin-bottom: 0;
}
.new-task-creator .create {
  color: var(--clr-primary);
}
.delete-stuff {
  display: flex;
  justify-content: space-evenly;
  position: absolute;
  left: 0;
  width: 100%;
  bottom: -30px;
  color: var(--clr-light);
}
.btn.delete {
  font-size: 1rem;
  opacity: 0.7;
  transform: color 200ms;
  &:hover {
    opacity: 1;
    text-shadow: 0 0 10px white;
    color: var(--clr-warning);
  }
}
//

// Footer portion
footer {
  grid-area: footer;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 30%;
  margin-bottom: 1.5rem;
  //   opacity: 0.5;
  .footer-title {
    margin: 0 1rem 0 1rem;
    opacity: 0.5;
  }
  p {
    margin-top: 0;
    font-size: 1rem;
    opacity: 0.5;
  }
  .social-icons {
    width: 20%;
    display: flex;
    justify-content: space-between;
    a i {
      color: var(--clr-light);
      opacity: 0.5;
      &:hover {
        opacity: 1;
      }
    }
  }
}
//

// RWD media queries
@media screen and (max-width: 855px) {
  body {
    display: grid;
    grid:
      "header header  header" auto
      "......  lists   ......"
      "...... activated ......" auto
      "footer footer footer" auto /
      1fr 3fr 1fr;
  }
  .title {
    margin-bottom: 1rem;
  }
  .todo-list {
    margin-top: 2rem;
  }
}
@media screen and (max-width: 600px) {
  .task label {
    font-size: 1rem;
  }
  .new-task-creator input {
    font-size: 1.25rem;
  }
  footer .social-icons {
    width: 50%;
  }
}
